#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.8.9
# In conjunction with Tcl version 8.6
#    Jun 16, 2017 09:01:50 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import unknown_support
import ex

from tkinter import filedialog
def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel_1 (root)
    unknown_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel_1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel_1 (w)
    unknown_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel_1():
    global w
    w.destroy()
    w = None


class New_Toplevel_1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        top.geometry("600x450+534+156")
        top.title("Video to 3D Video Converter")
        top.configure(background="#d9d9d9")



        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.03, rely=0.04, relheight=0.21, relwidth=0.94)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(width=565)

        self.Label3 = Label(self.Frame1)
        self.Label3.place(relx=0.05, rely=0.32, height=21, width=514)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''3D video converter for VR Box''')
        self.Label3.configure(width=514)

        self.Button1 = Button(top,command=self.sourceButton)
        self.Button1.place(relx=0.13, rely=0.33, height=24, width=137)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Select Video''')
        self.Button1.configure(width=137)

        self.Label1 = Label(top)
        self.Label1.place(relx=0.33, rely=0.33, height=21, width=374)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Select a video file''')
        self.Label1.configure(width=374)

        self.Button2 = Button(top,command=self.destinationButton)
        self.Button2.place(relx=0.13, rely=0.47, height=24, width=137)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Select Destination Folder''')
        self.Button2.configure(width=137)

        self.Label2 = Label(top)
        self.Label2.place(relx=0.32, rely=0.47, height=21, width=394)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Select a destination folder''')
        self.Label2.configure(width=394)

        self.Button4 = Button(top,command=self.convertButton)
        self.Button4.place(relx=0.45, rely=0.64, height=24, width=53)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''Convert''')

        self.Label4 = Label(top)
        self.Label4.place(relx=0.02, rely=0.78, height=41, width=564)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''please wait (it will take time equal to the video length)''')
        self.Label4.configure(width=564)

        self.source=""
        self.dest=""

    def getFileName(self):
        file_path = filedialog.askopenfilename(filetypes=(("Video Files","*.mp4"),("Video Files","*.avi"),("Video Files","*.3gp"),("Video Files","*.st")))
        return file_path

    def getFolderName(self):
        file_path = filedialog.askdirectory()
        return file_path

    def sourceButton(self):
    	self.source=self.getFileName()
    	if self.source:
    		self.Label1.configure(text=self.source+" is selected")
    	else:
    		self.Label1.configure("Select a video file")

    def destinationButton(self):
    	self.dest=self.getFolderName()
    	if self.dest:
    		self.Label2.configure(text=self.dest+" is selected")
    	else:
    		self.Label2.configure("Select a destination folder")

    def convertButton(self):
    	if self.source and self.dest :
    		self.Label4.configure(text="Converting... please wait (it will take time equal to the video length)")
    		ex.convert(self.source,self.dest)
    		self.Label4.configure(text="Completed please check the "+self.dest+" folder")


    	else :
    		self.Label4.configure(text="Please select source video and destination folder.")













if __name__ == '__main__':
    vp_start_gui()



